/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.apache.spark.sql.execution.datasources.parquet.test.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroArrayOfArray extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroArrayOfArray\",\"namespace\":\"org.apache.spark.sql.execution.datasources.parquet.test.avro\",\"fields\":[{\"name\":\"int_arrays_column\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"array\",\"items\":\"int\"}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<java.util.List<Integer>> int_arrays_column;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AvroArrayOfArray() {}

  /**
   * All-args constructor.
   */
  public AvroArrayOfArray(java.util.List<java.util.List<Integer>> int_arrays_column) {
    this.int_arrays_column = int_arrays_column;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public Object get(int field$) {
    switch (field$) {
    case 0: return int_arrays_column;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: int_arrays_column = (java.util.List<java.util.List<Integer>>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'int_arrays_column' field.
   */
  public java.util.List<java.util.List<Integer>> getIntArraysColumn() {
    return int_arrays_column;
  }

  /**
   * Sets the value of the 'int_arrays_column' field.
   * @param value the value to set.
   */
  public void setIntArraysColumn(java.util.List<java.util.List<Integer>> value) {
    this.int_arrays_column = value;
  }

  /** Creates a new AvroArrayOfArray RecordBuilder */
  public static Builder newBuilder() {
    return new Builder();
  }
  
  /** Creates a new AvroArrayOfArray RecordBuilder by copying an existing Builder */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }
  
  /** Creates a new AvroArrayOfArray RecordBuilder by copying an existing AvroArrayOfArray instance */
  public static Builder newBuilder(AvroArrayOfArray other) {
    return new Builder(other);
  }
  
  /**
   * RecordBuilder for AvroArrayOfArray instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroArrayOfArray>
    implements org.apache.avro.data.RecordBuilder<AvroArrayOfArray> {

    private java.util.List<java.util.List<Integer>> int_arrays_column;

    /** Creates a new Builder */
    private Builder() {
      super(AvroArrayOfArray.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.int_arrays_column)) {
        this.int_arrays_column = data().deepCopy(fields()[0].schema(), other.int_arrays_column);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AvroArrayOfArray instance */
    private Builder(AvroArrayOfArray other) {
            super(AvroArrayOfArray.SCHEMA$);
      if (isValidValue(fields()[0], other.int_arrays_column)) {
        this.int_arrays_column = data().deepCopy(fields()[0].schema(), other.int_arrays_column);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'int_arrays_column' field */
    public java.util.List<java.util.List<Integer>> getIntArraysColumn() {
      return int_arrays_column;
    }
    
    /** Sets the value of the 'int_arrays_column' field */
    public Builder setIntArraysColumn(java.util.List<java.util.List<Integer>> value) {
      validate(fields()[0], value);
      this.int_arrays_column = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'int_arrays_column' field has been set */
    public boolean hasIntArraysColumn() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'int_arrays_column' field */
    public Builder clearIntArraysColumn() {
      int_arrays_column = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings(value="unchecked")
    public AvroArrayOfArray build() {
      try {
        AvroArrayOfArray record = new AvroArrayOfArray();
        record.int_arrays_column = fieldSetFlags()[0] ? this.int_arrays_column : (java.util.List<java.util.List<Integer>>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
